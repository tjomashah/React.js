{"ast":null,"code":"var _jsxFileName = \"/home/artem/Delinternet/React.js/holidays/src/components/Festas.js\";\nimport React from \"react\";\nimport file from \"./files/res.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst holsTemplate = {\n  //  ./files/res.json\n  \"01-01\": \"Cap d'Any\",\n  \"04-02\": \"Divendres Sant\",\n  \"05-01\": \"Dia del Treballador\",\n  \"06-24\": \"Sant Joan\",\n  \"09-11\": \"Diada Nacional de Catalunya\",\n  \"10-12\": \"Festa Nacional d'Espanya\",\n  \"11-01\": \"Tots Sants\",\n  \"12-06\": \"Dia de la Constitució\",\n  \"12-08\": \"La Immaculada\",\n  \"12-25\": \"Nadal\",\n  \"12-26\": \"Sant Esteve\"\n};\n\nclass Festas extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    let data = [];\n    const name = Object.keys(file); //all hol - arr\n\n    let index = 1;\n\n    const getHol = () => {\n      for (let i = 0; i < name.length; i++) {\n        const currentName = name[i];\n        const currentExtMonths = file[currentName];\n        const months = Object.keys(file[currentName]); //by 1 hol - arr\n\n        for (let j = 0; j < months.length; j++) {\n          const currentMonth = months[j];\n          const holName = currentName; //\n\n          const month = currentMonth; // hol - str\n\n          const date = currentExtMonths[month]; // date - str\n\n          let d = date.replace(\"2021\", \"2022\"); //console.log(d);\n\n          data.push([index, holName, date]);\n          index++;\n        }\n      }\n\n      this.setState({\n        data\n      });\n    };\n\n    getHol();\n  }\n\n  createHolidaysPeriods(holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = [];\n    this.getYearsUntil(from, to, function (year) {\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`\n        };\n        response.push(item);\n      }\n    });\n    console.log(response);\n    return response;\n  }\n\n  createHolidaysPeriodsAsYears(holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = {};\n    this.getYearsUntil(from, to, function (year) {\n      const currentYear = {};\n\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`\n        };\n        currentYear[`${year}-${monthDay}`] = item;\n      }\n\n      response[year] = currentYear;\n    });\n    return response;\n  }\n\n  getYearsUntil(from, until = 0, callback) {\n    while (from <= until) {\n      callback(from);\n      from++;\n    }\n  }\n\n  parseJSon() {\n    const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n    let auxData = this.state.data;\n\n    for (let i = 0; i < tableHeader.length; i++) {\n      auxData.unshift(tableHeader[i].join(\",\"));\n    }\n\n    let csvString = auxData.join(\"%0A\");\n    let a = document.createElement(\"a\");\n    a.href = \"data:attachment/csv,\" + csvString;\n    a.target = \"_blank\";\n    a.download = \"Festas.csv\";\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        paddingTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => {\n          this.parseJSon();\n        },\n        children: \"Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-hover\",\n        style: {\n          width: 800,\n          textAlign: \"center\",\n          marginTop: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.data.map((record, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(record).map((row, key) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: record[row]\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 28\n                }, this);\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Festas; // import React from \"react\";\n// import file from \"./files/res.json\";\n// class Festas extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       data: [],\n//     };\n//   }\n//   componentDidMount() {\n//     let data = [];\n//     const name = Object.keys(file);\n//     console.log(name);\n//     let index = 1;\n//     const getHol = () => {\n//       for (let i = 0; i < name.length; i++) {\n//         const currentName = name[i];\n//         const currentExtMonths = file[currentName];\n//         const months = Object.keys(file[currentName]);\n//         console.log(months);\n//         for (let j = 0; j < months.length; j++) {\n//           const currentMonth = months[j];\n//           const holName = currentName; //\n//           const month = currentMonth; // name\n//           console.log(month);\n//           const date = currentExtMonths[month]; // date\n//           let d = date.replace(\"2021\", \"2022\");\n//           console.log(d);\n//           data.push([index, holName, date]);\n//           index++;\n//         }\n//       }\n//       this.setState({ data });\n//     };\n//     getHol();\n//   }\n//   parseJSon() {\n//     const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n//     let auxData = this.state.data;\n//     for (let i = 0; i < tableHeader.length; i++) {\n//       auxData.unshift(tableHeader[i].join(\",\"));\n//     }\n//     let csvString = auxData.join(\"%0A\");\n//     let a = document.createElement(\"a\");\n//     a.href = \"data:attachment/csv,\" + csvString;\n//     a.target = \"_blank\";\n//     a.download = \"Festas.csv\";\n//     document.body.appendChild(a);\n//     a.click();\n//   }\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           paddingTop: 30,\n//         }}\n//       >\n//         <button\n//           className=\"btn btn-dark\"\n//           onClick={() => {\n//             this.parseJSon();\n//           }}\n//         >\n//           Export\n//         </button>\n//         <table\n//           className=\"table table-bordered table-hover\"\n//           style={{ width: 800, textAlign: \"center\", marginTop: 30 }}\n//         >\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">#</th>\n//               <th scope=\"col\">Name</th>\n//               <th scope=\"col\">Date</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.state.data.map((record, i) => {\n//               return (\n//                 <tr key={i}>\n//                   {Object.keys(record).map((row, key) => {\n//                     return <td key={key}>{record[row]}</td>;\n//                   })}\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n// export default Festas;","map":{"version":3,"sources":["/home/artem/Delinternet/React.js/holidays/src/components/Festas.js"],"names":["React","file","holsTemplate","Festas","Component","constructor","state","data","componentDidMount","name","Object","keys","index","getHol","i","length","currentName","currentExtMonths","months","j","currentMonth","holName","month","date","d","replace","push","setState","createHolidaysPeriods","holidays","from","to","holidaysDates","response","getYearsUntil","year","monthDay","item","id","console","log","createHolidaysPeriodsAsYears","currentYear","until","callback","parseJSon","tableHeader","auxData","unshift","join","csvString","a","document","createElement","href","target","download","body","appendChild","click","render","display","flexDirection","alignItems","paddingTop","width","textAlign","marginTop","map","record","row","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport file from \"./files/res.json\";\n\nconst holsTemplate = {\n  //  ./files/res.json\n  \"01-01\": \"Cap d'Any\",\n  \"04-02\": \"Divendres Sant\",\n  \"05-01\": \"Dia del Treballador\",\n  \"06-24\": \"Sant Joan\",\n  \"09-11\": \"Diada Nacional de Catalunya\",\n  \"10-12\": \"Festa Nacional d'Espanya\",\n  \"11-01\": \"Tots Sants\",\n  \"12-06\": \"Dia de la Constitució\",\n  \"12-08\": \"La Immaculada\",\n  \"12-25\": \"Nadal\",\n  \"12-26\": \"Sant Esteve\",\n};\n\nclass Festas extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    let data = [];\n\n    const name = Object.keys(file); //all hol - arr\n\n    let index = 1;\n\n    const getHol = () => {\n      for (let i = 0; i < name.length; i++) {\n        const currentName = name[i];\n        const currentExtMonths = file[currentName];\n\n        const months = Object.keys(file[currentName]); //by 1 hol - arr\n\n        for (let j = 0; j < months.length; j++) {\n          const currentMonth = months[j];\n\n          const holName = currentName; //\n          const month = currentMonth; // hol - str\n\n          const date = currentExtMonths[month]; // date - str\n          let d = date.replace(\"2021\", \"2022\");\n          //console.log(d);\n\n          data.push([index, holName, date]);\n\n          index++;\n        }\n      }\n\n      this.setState({ data });\n    };\n    getHol();\n  }\n\n  createHolidaysPeriods(holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = [];\n    this.getYearsUntil(from, to, function (year) {\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`,\n        };\n        response.push(item);\n      }\n    });\n    console.log(response);\n    return response;\n  }\n\n  createHolidaysPeriodsAsYears(holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = {};\n    this.getYearsUntil(from, to, function (year) {\n      const currentYear = {};\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`,\n        };\n        currentYear[`${year}-${monthDay}`] = item;\n      }\n      response[year] = currentYear;\n    });\n    return response;\n  }\n\n  getYearsUntil(from, until = 0, callback) {\n    while (from <= until) {\n      callback(from);\n      from++;\n    }\n  }\n\n  parseJSon() {\n    const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n    let auxData = this.state.data;\n\n    for (let i = 0; i < tableHeader.length; i++) {\n      auxData.unshift(tableHeader[i].join(\",\"));\n    }\n\n    let csvString = auxData.join(\"%0A\");\n\n    let a = document.createElement(\"a\");\n    a.href = \"data:attachment/csv,\" + csvString;\n    a.target = \"_blank\";\n    a.download = \"Festas.csv\";\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          paddingTop: 30,\n        }}\n      >\n        <button\n          className=\"btn btn-dark\"\n          onClick={() => {\n            this.parseJSon();\n          }}\n        >\n          Export\n        </button>\n\n        <table\n          className=\"table table-bordered table-hover\"\n          style={{ width: 800, textAlign: \"center\", marginTop: 30 }}\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((record, i) => {\n              return (\n                <tr key={i}>\n                  {Object.keys(record).map((row, key) => {\n                    return <td key={key}>{record[row]}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Festas;\n\n// import React from \"react\";\n// import file from \"./files/res.json\";\n\n// class Festas extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       data: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     let data = [];\n\n//     const name = Object.keys(file);\n//     console.log(name);\n\n//     let index = 1;\n\n//     const getHol = () => {\n//       for (let i = 0; i < name.length; i++) {\n//         const currentName = name[i];\n//         const currentExtMonths = file[currentName];\n\n//         const months = Object.keys(file[currentName]);\n//         console.log(months);\n\n//         for (let j = 0; j < months.length; j++) {\n//           const currentMonth = months[j];\n\n//           const holName = currentName; //\n//           const month = currentMonth; // name\n//           console.log(month);\n\n//           const date = currentExtMonths[month]; // date\n//           let d = date.replace(\"2021\", \"2022\");\n//           console.log(d);\n\n//           data.push([index, holName, date]);\n\n//           index++;\n//         }\n//       }\n\n//       this.setState({ data });\n//     };\n//     getHol();\n//   }\n\n//   parseJSon() {\n//     const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n//     let auxData = this.state.data;\n\n//     for (let i = 0; i < tableHeader.length; i++) {\n//       auxData.unshift(tableHeader[i].join(\",\"));\n//     }\n\n//     let csvString = auxData.join(\"%0A\");\n\n//     let a = document.createElement(\"a\");\n//     a.href = \"data:attachment/csv,\" + csvString;\n//     a.target = \"_blank\";\n//     a.download = \"Festas.csv\";\n//     document.body.appendChild(a);\n//     a.click();\n//   }\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           paddingTop: 30,\n//         }}\n//       >\n//         <button\n//           className=\"btn btn-dark\"\n//           onClick={() => {\n//             this.parseJSon();\n//           }}\n//         >\n//           Export\n//         </button>\n\n//         <table\n//           className=\"table table-bordered table-hover\"\n//           style={{ width: 800, textAlign: \"center\", marginTop: 30 }}\n//         >\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">#</th>\n//               <th scope=\"col\">Name</th>\n//               <th scope=\"col\">Date</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.state.data.map((record, i) => {\n//               return (\n//                 <tr key={i}>\n//                   {Object.keys(record).map((row, key) => {\n//                     return <td key={key}>{record[row]}</td>;\n//                   })}\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Festas;\n"]},"metadata":{},"sourceType":"module"}