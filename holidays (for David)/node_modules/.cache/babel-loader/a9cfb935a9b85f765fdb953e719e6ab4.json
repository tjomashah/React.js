{"ast":null,"code":"const HolidaysFactory = {\n  getYearsUntil: function (from, until = 0, callback) {\n    let fromAux = from,\n        untilAux = until;\n\n    while (fromAux <= untilAux) {\n      callback(fromAux);\n      fromAux++;\n    }\n  },\n  createHolidaysPeriods: function (holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = [];\n    this.getYearsUntil(from, to, function (year) {\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`\n        };\n        response.push(item);\n      }\n    });\n  }\n}; // test\n\nconst from = 2021;\nconst until = 2041;\nconst HOLYDAYS = {\n  \"01-01\": \"Cap d'Any\",\n  \"04-02\": \"Divendres Sant\",\n  \"05-01\": \"Dia del Treballador\",\n  \"06-24\": \"Sant Joan\",\n  \"09-11\": \"Diada Nacional de Catalunya\",\n  \"10-12\": \"Festa Nacional d'Espanya\",\n  \"11-01\": \"Tots Sants\",\n  \"12-06\": \"Dia de la Constitució\",\n  \"12-08\": \"La Immaculada\",\n  \"12-25\": \"Nadal\",\n  \"12-26\": \"Sant Esteve\"\n};\nconst holidaysPeriod = HolidaysFactory.createHolidaysPeriods(HOLYDAYS, from, until); // import React from \"react\";\n// import file from \"./files/res.json\";\n// const holsTemplate = {\n//   //  ./files/res.json\n//   \"01-01\": \"Cap d'Any\",\n//   \"04-02\": \"Divendres Sant\",\n//   \"05-01\": \"Dia del Treballador\",\n//   \"06-24\": \"Sant Joan\",\n//   \"09-11\": \"Diada Nacional de Catalunya\",\n//   \"10-12\": \"Festa Nacional d'Espanya\",\n//   \"11-01\": \"Tots Sants\",\n//   \"12-06\": \"Dia de la Constitució\",\n//   \"12-08\": \"La Immaculada\",\n//   \"12-25\": \"Nadal\",\n//   \"12-26\": \"Sant Esteve\",\n// };\n// class Festas extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       data: [],\n//     };\n//   }\n//   componentDidMount() {\n//     let data = [];\n//     const name = Object.keys(file); //all hol - arr\n//     let index = 1;\n//     const getHol = () => {\n//       for (let i = 0; i < name.length; i++) {\n//         const currentName = name[i];\n//         const currentExtMonths = file[currentName];\n//         const months = Object.keys(file[currentName]); //by 1 hol - arr\n//         for (let j = 0; j < months.length; j++) {\n//           const currentMonth = months[j];\n//           const holName = currentName; //\n//           const month = currentMonth; // hol - str\n//           const date = currentExtMonths[month]; // date - str\n//           let d = date.replace(\"2021\", \"2022\");\n//           console.log(d);\n//           data.push([index, holName, date]);\n//           index++;\n//         }\n//       }\n//       this.setState({ data });\n//     };\n//     getHol();\n//   }\n//   createHolidaysPeriods(holidays = {}, from, to) {\n//     let holidaysDates = Object.keys(holidays);\n//     const response = [];\n//     this.getYearsUntil(from, to, function (year) {\n//       for (let i = 0; i < holidaysDates.length; i++) {\n//         const monthDay = holidaysDates[i];\n//         const item = {\n//           id: i + 1,\n//           name: holidays[monthDay],\n//           date: `${year}-${monthDay}`,\n//         };\n//         response.push(item);\n//       }\n//     });\n//     console.log(response);\n//     return response;\n//   }\n//   createHolidaysPeriodsAsYears(holidays = {}, from, to) {\n//     let holidaysDates = Object.keys(holidays);\n//     const response = {};\n//     this.getYearsUntil(from, to, function (year) {\n//       const currentYear = {};\n//       for (let i = 0; i < holidaysDates.length; i++) {\n//         const monthDay = holidaysDates[i];\n//         const item = {\n//           id: i + 1,\n//           name: holidays[monthDay],\n//           date: `${year}-${monthDay}`,\n//         };\n//         currentYear[`${year}-${monthDay}`] = item;\n//       }\n//       response[year] = currentYear;\n//     });\n//     return response;\n//   }\n//   getYearsUntil(from, until = 0, callback) {\n//     while (from <= until) {\n//       callback(from);\n//       from++;\n//     }\n//   }\n//   parseJSon() {\n//     const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n//     let auxData = this.state.data;\n//     for (let i = 0; i < tableHeader.length; i++) {\n//       auxData.unshift(tableHeader[i].join(\",\"));\n//     }\n//     let csvString = auxData.join(\"%0A\");\n//     let a = document.createElement(\"a\");\n//     a.href = \"data:attachment/csv,\" + csvString;\n//     a.target = \"_blank\";\n//     a.download = \"Festas.csv\";\n//     document.body.appendChild(a);\n//     a.click();\n//   }\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           paddingTop: 30,\n//         }}\n//       >\n//         <button\n//           className=\"btn btn-dark\"\n//           onClick={() => {\n//             this.parseJSon();\n//           }}\n//         >\n//           Export\n//         </button>\n//         <table\n//           className=\"table table-bordered table-hover\"\n//           style={{ width: 800, textAlign: \"center\", marginTop: 30 }}\n//         >\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">#</th>\n//               <th scope=\"col\">Name</th>\n//               <th scope=\"col\">Date</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.state.data.map((record, i) => {\n//               return (\n//                 <tr key={i}>\n//                   {Object.keys(record).map((row, key) => {\n//                     return <td key={key}>{record[row]}</td>;\n//                   })}\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n// export default Festas;","map":{"version":3,"sources":["/home/artem/Delinternet/React.js/holidays/src/components/Festas.js"],"names":["HolidaysFactory","getYearsUntil","from","until","callback","fromAux","untilAux","createHolidaysPeriods","holidays","to","holidaysDates","Object","keys","response","year","i","length","monthDay","item","id","name","date","push","HOLYDAYS","holidaysPeriod"],"mappings":"AAAA,MAAMA,eAAe,GAAG;AACtBC,EAAAA,aAAa,EAAE,UAAUC,IAAV,EAAgBC,KAAK,GAAG,CAAxB,EAA2BC,QAA3B,EAAqC;AAClD,QAAIC,OAAO,GAAGH,IAAd;AAAA,QACEI,QAAQ,GAAGH,KADb;;AAEA,WAAOE,OAAO,IAAIC,QAAlB,EAA4B;AAC1BF,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACAA,MAAAA,OAAO;AACR;AACF,GARqB;AAStBE,EAAAA,qBAAqB,EAAE,UAAUC,QAAQ,GAAG,EAArB,EAAyBN,IAAzB,EAA+BO,EAA/B,EAAmC;AACxD,QAAIC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAApB;AACA,UAAMK,QAAQ,GAAG,EAAjB;AACA,SAAKZ,aAAL,CAAmBC,IAAnB,EAAyBO,EAAzB,EAA6B,UAAUK,IAAV,EAAgB;AAC3C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACM,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAME,QAAQ,GAAGP,aAAa,CAACK,CAAD,CAA9B;AACA,cAAMG,IAAI,GAAG;AACXC,UAAAA,EAAE,EAAEJ,CAAC,GAAG,CADG;AAEXK,UAAAA,IAAI,EAAEZ,QAAQ,CAACS,QAAD,CAFH;AAGXI,UAAAA,IAAI,EAAG,GAAEP,IAAK,IAAGG,QAAS;AAHf,SAAb;AAKAJ,QAAAA,QAAQ,CAACS,IAAT,CAAcJ,IAAd;AACD;AACF,KAVD;AAWD;AAvBqB,CAAxB,C,CA0BA;;AACA,MAAMhB,IAAI,GAAG,IAAb;AACA,MAAMC,KAAK,GAAG,IAAd;AACA,MAAMoB,QAAQ,GAAG;AACf,WAAS,WADM;AAEf,WAAS,gBAFM;AAGf,WAAS,qBAHM;AAIf,WAAS,WAJM;AAKf,WAAS,6BALM;AAMf,WAAS,0BANM;AAOf,WAAS,YAPM;AAQf,WAAS,uBARM;AASf,WAAS,eATM;AAUf,WAAS,OAVM;AAWf,WAAS;AAXM,CAAjB;AAcA,MAAMC,cAAc,GAAGxB,eAAe,CAACO,qBAAhB,CACrBgB,QADqB,EAErBrB,IAFqB,EAGrBC,KAHqB,CAAvB,C,CAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["const HolidaysFactory = {\n  getYearsUntil: function (from, until = 0, callback) {\n    let fromAux = from,\n      untilAux = until;\n    while (fromAux <= untilAux) {\n      callback(fromAux);\n      fromAux++;\n    }\n  },\n  createHolidaysPeriods: function (holidays = {}, from, to) {\n    let holidaysDates = Object.keys(holidays);\n    const response = [];\n    this.getYearsUntil(from, to, function (year) {\n      for (let i = 0; i < holidaysDates.length; i++) {\n        const monthDay = holidaysDates[i];\n        const item = {\n          id: i + 1,\n          name: holidays[monthDay],\n          date: `${year}-${monthDay}`,\n        };\n        response.push(item);\n      }\n    });\n  },\n};\n\n// test\nconst from = 2021;\nconst until = 2041;\nconst HOLYDAYS = {\n  \"01-01\": \"Cap d'Any\",\n  \"04-02\": \"Divendres Sant\",\n  \"05-01\": \"Dia del Treballador\",\n  \"06-24\": \"Sant Joan\",\n  \"09-11\": \"Diada Nacional de Catalunya\",\n  \"10-12\": \"Festa Nacional d'Espanya\",\n  \"11-01\": \"Tots Sants\",\n  \"12-06\": \"Dia de la Constitució\",\n  \"12-08\": \"La Immaculada\",\n  \"12-25\": \"Nadal\",\n  \"12-26\": \"Sant Esteve\",\n};\n\nconst holidaysPeriod = HolidaysFactory.createHolidaysPeriods(\n  HOLYDAYS,\n  from,\n  until\n);\n\n// import React from \"react\";\n// import file from \"./files/res.json\";\n\n// const holsTemplate = {\n//   //  ./files/res.json\n//   \"01-01\": \"Cap d'Any\",\n//   \"04-02\": \"Divendres Sant\",\n//   \"05-01\": \"Dia del Treballador\",\n//   \"06-24\": \"Sant Joan\",\n//   \"09-11\": \"Diada Nacional de Catalunya\",\n//   \"10-12\": \"Festa Nacional d'Espanya\",\n//   \"11-01\": \"Tots Sants\",\n//   \"12-06\": \"Dia de la Constitució\",\n//   \"12-08\": \"La Immaculada\",\n//   \"12-25\": \"Nadal\",\n//   \"12-26\": \"Sant Esteve\",\n// };\n\n// class Festas extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       data: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     let data = [];\n\n//     const name = Object.keys(file); //all hol - arr\n\n//     let index = 1;\n\n//     const getHol = () => {\n//       for (let i = 0; i < name.length; i++) {\n//         const currentName = name[i];\n//         const currentExtMonths = file[currentName];\n\n//         const months = Object.keys(file[currentName]); //by 1 hol - arr\n\n//         for (let j = 0; j < months.length; j++) {\n//           const currentMonth = months[j];\n\n//           const holName = currentName; //\n//           const month = currentMonth; // hol - str\n\n//           const date = currentExtMonths[month]; // date - str\n//           let d = date.replace(\"2021\", \"2022\");\n//           console.log(d);\n\n//           data.push([index, holName, date]);\n\n//           index++;\n//         }\n//       }\n\n//       this.setState({ data });\n//     };\n//     getHol();\n//   }\n\n//   createHolidaysPeriods(holidays = {}, from, to) {\n//     let holidaysDates = Object.keys(holidays);\n//     const response = [];\n//     this.getYearsUntil(from, to, function (year) {\n//       for (let i = 0; i < holidaysDates.length; i++) {\n//         const monthDay = holidaysDates[i];\n//         const item = {\n//           id: i + 1,\n//           name: holidays[monthDay],\n//           date: `${year}-${monthDay}`,\n//         };\n//         response.push(item);\n//       }\n//     });\n//     console.log(response);\n//     return response;\n//   }\n\n//   createHolidaysPeriodsAsYears(holidays = {}, from, to) {\n//     let holidaysDates = Object.keys(holidays);\n//     const response = {};\n//     this.getYearsUntil(from, to, function (year) {\n//       const currentYear = {};\n//       for (let i = 0; i < holidaysDates.length; i++) {\n//         const monthDay = holidaysDates[i];\n//         const item = {\n//           id: i + 1,\n//           name: holidays[monthDay],\n//           date: `${year}-${monthDay}`,\n//         };\n//         currentYear[`${year}-${monthDay}`] = item;\n//       }\n//       response[year] = currentYear;\n//     });\n//     return response;\n//   }\n\n//   getYearsUntil(from, until = 0, callback) {\n//     while (from <= until) {\n//       callback(from);\n//       from++;\n//     }\n//   }\n\n//   parseJSon() {\n//     const tableHeader = [[\"№\", \"Name\", \"Date\"]];\n//     let auxData = this.state.data;\n\n//     for (let i = 0; i < tableHeader.length; i++) {\n//       auxData.unshift(tableHeader[i].join(\",\"));\n//     }\n\n//     let csvString = auxData.join(\"%0A\");\n\n//     let a = document.createElement(\"a\");\n//     a.href = \"data:attachment/csv,\" + csvString;\n//     a.target = \"_blank\";\n//     a.download = \"Festas.csv\";\n//     document.body.appendChild(a);\n//     a.click();\n//   }\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           paddingTop: 30,\n//         }}\n//       >\n//         <button\n//           className=\"btn btn-dark\"\n//           onClick={() => {\n//             this.parseJSon();\n//           }}\n//         >\n//           Export\n//         </button>\n\n//         <table\n//           className=\"table table-bordered table-hover\"\n//           style={{ width: 800, textAlign: \"center\", marginTop: 30 }}\n//         >\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">#</th>\n//               <th scope=\"col\">Name</th>\n//               <th scope=\"col\">Date</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {this.state.data.map((record, i) => {\n//               return (\n//                 <tr key={i}>\n//                   {Object.keys(record).map((row, key) => {\n//                     return <td key={key}>{record[row]}</td>;\n//                   })}\n//                 </tr>\n//               );\n//             })}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Festas;\n"]},"metadata":{},"sourceType":"module"}