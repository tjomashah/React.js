{"ast":null,"code":"var _jsxFileName = \"/home/artem/Delinternet/React.js/holidays/src/components/New.js\";\nimport React from \"react\";\nimport Papa from \"papaparse\";\nimport \"../index.css\";\n/* const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n] */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"];\n\nclass Upload extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        csvfile: event.target.files[0]\n      });\n    };\n\n    this.importCSV = () => {\n      const {\n        csvfile\n      } = this.state;\n      Papa.parse(csvfile, {\n        complete: this.updateData,\n        header: true\n      });\n    };\n\n    this.getHeader = () => {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-md navbar-light bg-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://delinternet.com\",\n          target: \"_blank\",\n          className: \"navbar-brand ml-1\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./delinternet.svg\",\n            height: \"35\",\n            className: \"margin-left\",\n            alt: \"delinternet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"app-name\",\n          children: \" Calculadora de Extensi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.exportToCSVButton = () => {\n      if (Object.keys(this.parsed).length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wrapper-exp-btn btn btn-dark export-btn\",\n          onClick: () => {\n            this.parseJSon();\n          },\n          children: \"Exportar a csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    };\n\n    this.getProcessBtn = () => {\n      if (this.state.csvfile.length <= 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wrapper-choose-btn btn btn-secondary\",\n        onClick: this.importCSV,\n        children: \"Proceso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.getResetBtn = () => {\n      if (this.state.csvfile.length <= 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wrapper-choose-btn btn btn-warning btn-reset\",\n        onClick: this.reset,\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.reset = () => {\n      this.filesInput.value = \"\";\n      this.parsed = [];\n      this.setState({\n        csvfile: [],\n        file: [],\n        parse: []\n      });\n    };\n\n    this.getTable = () => {\n      if (!this.state.parse || this.state.parse.length <= 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"extensi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"mes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"precio total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.parse.map((record, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(record).map((row, i) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: record[row]\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 26\n                }, this);\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.getFooter = () => {\n      return /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"c-footer fixed-bottom  pt-5 text-muted text-center text-small\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"\\xA9 2021 \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://delinternet.com\",\n            children: \"Delinternet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 23\n          }, this), \": Internet Fibra \\xD2ptica, telefonia fixa i m\\xF2bil\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-inline-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://delinternet.com/legalitat\",\n              children: \"Legalitat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-inline-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://delinternet.com/privacitat\",\n              children: \"Privacitat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-inline-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://delinternet.com/atencio-usuari\",\n              children: \"Protecci\\xF3 dades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      csvfile: [],\n      file: [],\n      parse: []\n    };\n    this.parsed = [];\n    this.updateData = this.updateData.bind(this);\n    this.exportToCSVButton = this.exportToCSVButton.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getFooter = this.getFooter.bind(this);\n    this.getProcessBtn = this.getProcessBtn.bind(this);\n    this.getResetBtn = this.getResetBtn.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  updateData(result) {\n    let _this = this;\n\n    let data = result.data;\n    this.setState({\n      file: data\n    });\n    data.forEach(element => {\n      if (element.direction == \"outbound\") {\n        let d = new Date(element.startTime);\n\n        _this.newExMonthBill(element.endpointName, monthNames[d.getMonth()], element.price);\n      }\n    });\n    let parse = [];\n    const extentions = Object.keys(this.parsed);\n    let index = 1;\n\n    for (let i = 0; i < extentions.length; i++) {\n      const currentExt = extentions[i];\n      const currentExtMonths = this.parsed[currentExt];\n      const months = Object.keys(this.parsed[currentExt]);\n\n      for (let j = 0; j < months.length; j++) {\n        const currentMonth = months[j];\n        const ext = currentExt; // 666\n\n        const month = currentMonth; // January\n\n        const price = currentExtMonths[month].toFixed(2); // 0.0585\n\n        parse.push([index, ext, month, price]);\n        index++;\n      }\n    }\n\n    this.setState({\n      parse\n    });\n  }\n\n  newExMonthBill(extansion, month, price) {\n    if (this.parsed[extansion]) {\n      if (this.parsed[extansion][month]) {\n        this.parsed[extansion][month] = parseFloat(price) + this.parsed[extansion][month];\n      } else {\n        this.parsed[extansion][month] = parseFloat(price);\n      }\n    } else {\n      this.parsed[extansion] = {};\n      this.parsed[extansion][month] = parseFloat(price);\n    }\n  }\n\n  parseJSon() {\n    const tableHeader = [[\"index\", \"extension\", \"month\", \"total\"]];\n    let auxData = this.state.parse;\n    console.log(auxData);\n\n    for (let i = 0; i < tableHeader.length; i++) {\n      auxData.unshift(tableHeader[i].join(\",\"));\n    }\n\n    let csvString = auxData.join(\"%0A\");\n    console.log(csvString);\n    let a = document.createElement(\"a\");\n    a.href = \"data:attachment/csv,\" + csvString;\n    a.target = \"_blank\";\n    a.download = `llamadas-${new Date().toDateString()}.csv`;\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [this.getHeader(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-header\",\n          children: \"Elija el archivo csv de llamadas para comenzar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"wrapper-input form-control\",\n              type: \"file\",\n              placeholder: \"Elija el archivo\",\n              ref: input => {\n                this.filesInput = input;\n              },\n              name: \"file\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.getProcessBtn()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.getResetBtn(), this.exportToCSVButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper-table\",\n          children: this.getTable()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), this.getFooter()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/artem/Delinternet/React.js/holidays/src/components/New.js"],"names":["React","Papa","monthNames","Upload","Component","constructor","handleChange","event","setState","csvfile","target","files","importCSV","state","parse","complete","updateData","header","getHeader","exportToCSVButton","Object","keys","parsed","length","parseJSon","getProcessBtn","getResetBtn","reset","filesInput","value","file","getTable","map","record","i","row","getFooter","bind","result","_this","data","forEach","element","direction","d","Date","startTime","newExMonthBill","endpointName","getMonth","price","extentions","index","currentExt","currentExtMonths","months","j","currentMonth","ext","month","toFixed","push","extansion","parseFloat","tableHeader","auxData","console","log","unshift","join","csvString","a","document","createElement","href","download","toDateString","body","appendChild","click","render","width","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Papa from \"papaparse\";\nimport \"../index.css\";\n\n/* const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n] */\nconst monthNames = [\n  \"enero\",\n  \"febrero\",\n  \"marzo\",\n  \"abril\",\n  \"mayo\",\n  \"junio\",\n  \"julio\",\n  \"agosto\",\n  \"septiembre\",\n  \"octubre\",\n  \"noviembre\",\n  \"diciembre\",\n];\n\nclass Upload extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      csvfile: [],\n      file: [],\n      parse: [],\n    };\n    this.parsed = [];\n    this.updateData = this.updateData.bind(this);\n    this.exportToCSVButton = this.exportToCSVButton.bind(this);\n    this.getHeader = this.getHeader.bind(this);\n    this.getFooter = this.getFooter.bind(this);\n    this.getProcessBtn = this.getProcessBtn.bind(this);\n    this.getResetBtn = this.getResetBtn.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      csvfile: event.target.files[0],\n    });\n  };\n\n  importCSV = () => {\n    const { csvfile } = this.state;\n    Papa.parse(csvfile, {\n      complete: this.updateData,\n      header: true,\n    });\n  };\n\n  updateData(result) {\n    let _this = this;\n    let data = result.data;\n\n    this.setState({ file: data });\n    data.forEach((element) => {\n      if (element.direction == \"outbound\") {\n        let d = new Date(element.startTime);\n        _this.newExMonthBill(\n          element.endpointName,\n          monthNames[d.getMonth()],\n          element.price\n        );\n      }\n    });\n    let parse = [];\n    const extentions = Object.keys(this.parsed);\n\n    let index = 1;\n    for (let i = 0; i < extentions.length; i++) {\n      const currentExt = extentions[i];\n      const currentExtMonths = this.parsed[currentExt];\n\n      const months = Object.keys(this.parsed[currentExt]);\n\n      for (let j = 0; j < months.length; j++) {\n        const currentMonth = months[j];\n        const ext = currentExt; // 666\n        const month = currentMonth; // January\n        const price = currentExtMonths[month].toFixed(2); // 0.0585\n\n        parse.push([index, ext, month, price]);\n\n        index++;\n      }\n    }\n\n    this.setState({ parse });\n  }\n\n  newExMonthBill(extansion, month, price) {\n    if (this.parsed[extansion]) {\n      if (this.parsed[extansion][month]) {\n        this.parsed[extansion][month] =\n          parseFloat(price) + this.parsed[extansion][month];\n      } else {\n        this.parsed[extansion][month] = parseFloat(price);\n      }\n    } else {\n      this.parsed[extansion] = {};\n      this.parsed[extansion][month] = parseFloat(price);\n    }\n  }\n\n  parseJSon() {\n    const tableHeader = [[\"index\", \"extension\", \"month\", \"total\"]];\n    let auxData = this.state.parse;\n    console.log(auxData);\n\n    for (let i = 0; i < tableHeader.length; i++) {\n      auxData.unshift(tableHeader[i].join(\",\"));\n    }\n\n    let csvString = auxData.join(\"%0A\");\n    console.log(csvString);\n\n    let a = document.createElement(\"a\");\n    a.href = \"data:attachment/csv,\" + csvString;\n    a.target = \"_blank\";\n    a.download = `llamadas-${new Date().toDateString()}.csv`;\n    document.body.appendChild(a);\n    a.click();\n  }\n\n  getHeader = () => {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <a\n          href=\"https://delinternet.com\"\n          target=\"_blank\"\n          className=\"navbar-brand ml-1\"\n        >\n          <img\n            src=\"./delinternet.svg\"\n            height=\"35\"\n            className=\"margin-left\"\n            alt=\"delinternet\"\n          />\n        </a>\n        <h3 className=\"app-name\"> Calculadora de Extensión</h3>\n      </nav>\n    );\n  };\n\n  exportToCSVButton = () => {\n    if (Object.keys(this.parsed).length > 0) {\n      return (\n        <button\n          className=\"wrapper-exp-btn btn btn-dark export-btn\"\n          onClick={() => {\n            this.parseJSon();\n          }}\n        >\n          Exportar a csv\n        </button>\n      );\n    }\n    return <></>;\n  };\n\n  getProcessBtn = () => {\n    if (this.state.csvfile.length <= 0) {\n      return <></>;\n    }\n    return (\n      <button\n        className=\"wrapper-choose-btn btn btn-secondary\"\n        onClick={this.importCSV}\n      >\n        Proceso\n      </button>\n    );\n  };\n\n  getResetBtn = () => {\n    if (this.state.csvfile.length <= 0) {\n      return <></>;\n    }\n    return (\n      <button\n        className=\"wrapper-choose-btn btn btn-warning btn-reset\"\n        onClick={this.reset}\n      >\n        Reiniciar\n      </button>\n    );\n  };\n\n  reset = () => {\n    this.filesInput.value = \"\";\n    this.parsed = [];\n    this.setState({\n      csvfile: [],\n      file: [],\n      parse: [],\n    });\n  };\n\n  getTable = () => {\n    if (!this.state.parse || this.state.parse.length <= 0) {\n      return <></>;\n    }\n    return (\n      <table className=\"table table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">extensión</th>\n            <th scope=\"col\">mes</th>\n            <th scope=\"col\">precio total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.parse.map((record, i) => {\n            return (\n              <tr key={i}>\n                {Object.keys(record).map((row, i) => {\n                  return <td key={i}>{record[row]}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  getFooter = () => {\n    return (\n      <footer className=\"c-footer fixed-bottom  pt-5 text-muted text-center text-small\">\n        <p className=\"mb-1\">\n          &copy; 2021 <a href=\"https://delinternet.com\">Delinternet</a>:\n          Internet Fibra Òptica, telefonia fixa i mòbil\n        </p>\n        <ul className=\"list-inline\">\n          <li className=\"list-inline-item\">\n            <a href=\"https://delinternet.com/legalitat\">Legalitat</a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a href=\"https://delinternet.com/privacitat\">Privacitat</a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a href=\"https://delinternet.com/atencio-usuari\">Protecció dades</a>\n          </li>\n        </ul>\n      </footer>\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n        }}\n      >\n        {this.getHeader()}\n        <div className=\"main-container\">\n          <h4 className=\"text-header\">\n            Elija el archivo csv de llamadas para comenzar\n          </h4>\n          <div className=\"wrapper\">\n            <div>\n              {/* input choose file */}\n              <input\n                className=\"wrapper-input form-control\"\n                type=\"file\"\n                placeholder={\"Elija el archivo\"}\n                ref={(input) => {\n                  this.filesInput = input;\n                }}\n                name=\"file\"\n                onChange={this.handleChange}\n              />\n            </div>\n            {/* btn upload file */}\n            <div>{this.getProcessBtn()}</div>\n            {/* btn export to .csv */}\n            <div>\n              {this.getResetBtn()}\n              {this.exportToCSVButton()}\n            </div>\n          </div>\n          {/* show data in the table */}\n          <div className=\"wrapper-table\">{this.getTable()}</div>\n        </div>\n        {this.getFooter()}\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}